//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Collections.Generic;
    
    public partial class Ciclo : IEquatable<Ciclo>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Ciclo()
        {
            this.Alumnos = new HashSet<Alumno>();
            this.OfertasFCTs = new HashSet<OfertasFCT>();
        }


        public Ciclo(string id, string nombre, string tipo, ICollection<Alumno> alumnos, ICollection<OfertasFCT> ofertasFCTs)
        {
            Id = id;
            Nombre = nombre;
            Tipo = tipo;
            Alumnos = alumnos;
            OfertasFCTs = ofertasFCTs;
        }

        public string Id { get; set; }
        public string Nombre { get; set; }
        public string Tipo { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Alumno> Alumnos { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OfertasFCT> OfertasFCTs { get; set; }

        public override bool Equals(object obj)
        {
            return Equals(obj as Ciclo);
        }

        public bool Equals(Ciclo other)
        {
            return other != null &&
                   Id.ToLower() == other.Id.ToLower();
        }

        public override int GetHashCode()
        {
            return 2108858624 + EqualityComparer<string>.Default.GetHashCode(Id);
        }
    }
}
